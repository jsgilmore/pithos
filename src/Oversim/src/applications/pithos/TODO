PhD TODO list:

Pithos:
Major:
Implement object modification for group storage.
Intuitivly, many more updates will occur, compared to puts, which strengthens the case for implementing update.
Extend the pithos test application to add modify testing.
Determine distributions of object requests and peer lifetimes to be used in PithosTestApp
Distributions for put, get and update will probably vary greatly.
These distributions have to be translated into their C/S counterparts, to enable profiling.

Ensure sent get stats in Pithos test app, match the stats in Group storage. This can probably be fixed by recording the number of unhandled requests.

Implement Pithos as a real world application
Develop grouping algorithm based on player traces
Have Pithos construct groups based on the grouping algorithm

Minor:
Make the latitude and longitude ranges for peers and super peers a changeable paramter instead of 100
Support can be added for partially connected groups that will reduce network bandwidth at the cost of latency
Add a debug mode to the code, which ads the debugging code currently present in Pithos as an option and not always.
The error condition of an unspecified peer should be logged.
Group storage should record its own successes, failures and latencies and not depend on PithosTestApp from recording them indirectly.
The DHT module can be changed so as to store and retrieve GameObjects instead of BinaryValues
A maximum distance needs to be defined for the directory server
Ensure correctness for pithos under 32bit systems. This includes testing long variable sizes and making them 32bit safe.

Dissertation:
Make sure the state management and persistency chapter uses the terms state management and persistency correctly.
Remove the term "game" where it is not required and replace with environment and VE.
Replace "player" with "user".
Replace "node" with "peer", where applicable.
Add bandwidth (overhead) as a required metric of a storage system.
Ensure that all applicable experimental setup parameters are given in the relevant evaluation sections.
Add figure displaying the expanded Oversim terminal.
Add figure displaying the structure of an object ledger.

Abstract:
Complete

Introduction:

Modelling:
Add sections back into the chapter that were removed when the paper was shortened.
Add more results, comparing variations in more parameters.

Ensure all symbols and abbreviations are present.

Conclusion:
Complete

Evalutaion:
Simulation todo:
Simulate the effect of group size on reliability, responsiveness and bandwidth usage.

Lit study todo:
Find paper that validates my overlay storage and reliability results for Chord.

Figures to generate:
When talking about another distributions that's the same, create a subplot showing that distribution.
Present responsiveness distribution for the "low" and "high" cases.

Coding todo:
Figure out why there is a 3s spike at overlay storage and retrieval

Writing todo:
Describe what we expect to see at the start of every new experiment, before we perform the experiment.
Write about the responsiveness of overlay storage in the LAN setup.
Write about the performance of the Pareto distribution.
Write about success responsiveness for the group probability case.
Add time label to group storage responsiveness for safe storage.
Add time label to group retrieval responsiveness for parallel retrieval.
Rewrite performance under repair section for just bandwidth, not efficiency

Writing and data mining todo:
Add responsiveness and bandwidth to security.

Hand-in PhD
Pass defence
Receive PhD
